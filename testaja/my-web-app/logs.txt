* 
* ==> Audit <==
* |---------|--------------------------|----------|-------|---------|---------------------|---------------------|
| Command |           Args           | Profile  | User  | Version |     Start Time      |      End Time       |
|---------|--------------------------|----------|-------|---------|---------------------|---------------------|
| start   |                          | minikube | nitas | v1.31.2 | 14 Sep 23 09:17 WIB | 14 Sep 23 09:24 WIB |
| service | my-web-app-service --url | minikube | nitas | v1.31.2 | 14 Sep 23 09:25 WIB |                     |
| service | my-web-app-service --url | minikube | nitas | v1.31.2 | 14 Sep 23 09:26 WIB |                     |
| service | my-web-app-service --url | minikube | nitas | v1.31.2 | 14 Sep 23 09:27 WIB |                     |
|---------|--------------------------|----------|-------|---------|---------------------|---------------------|

* 
* ==> Last Start <==
* Log file created at: 2023/09/14 09:17:51
Running on machine: nitasmacbookair
Binary: Built with gc go1.21.0 for darwin/arm64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0914 09:17:51.311116    9809 out.go:296] Setting OutFile to fd 1 ...
I0914 09:17:51.311301    9809 out.go:348] isatty.IsTerminal(1) = true
I0914 09:17:51.311303    9809 out.go:309] Setting ErrFile to fd 2...
I0914 09:17:51.311307    9809 out.go:348] isatty.IsTerminal(2) = true
I0914 09:17:51.311439    9809 root.go:338] Updating PATH: /Users/nitas/.minikube/bin
W0914 09:17:51.311523    9809 root.go:314] Error reading config file at /Users/nitas/.minikube/config/config.json: open /Users/nitas/.minikube/config/config.json: no such file or directory
I0914 09:17:51.313394    9809 out.go:303] Setting JSON to false
I0914 09:17:51.340882    9809 start.go:128] hostinfo: {"hostname":"nitasmacbookair.local","uptime":34468,"bootTime":1694623403,"procs":470,"os":"darwin","platform":"darwin","platformFamily":"Standalone Workstation","platformVersion":"12.4","kernelVersion":"21.5.0","kernelArch":"arm64","virtualizationSystem":"","virtualizationRole":"","hostId":"37a64c46-e9d6-5ad3-b48a-819c0533f641"}
W0914 09:17:51.341001    9809 start.go:136] gopshost.Virtualization returned error: not implemented yet
I0914 09:17:51.361247    9809 out.go:177] 😄  minikube v1.31.2 on Darwin 12.4 (arm64)
W0914 09:17:51.400480    9809 preload.go:295] Failed to list preload files: open /Users/nitas/.minikube/cache/preloaded-tarball: no such file or directory
I0914 09:17:51.400599    9809 notify.go:220] Checking for updates...
I0914 09:17:51.400794    9809 driver.go:373] Setting default libvirt URI to qemu:///system
I0914 09:17:51.400963    9809 global.go:111] Querying for installed drivers using PATH=/Users/nitas/.minikube/bin:/Users/nitas/Documents/devops/binar/google-cloud-sdk/bin:/usr/local/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/mysql/bin:/usr/local/mysql/support-files:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Users/nitas/Documents/DevOps-Playground-Ns/.trunk/tools:/Users/nitas/Documents/devops/binar/google-cloud-sdk/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/Users/nitas/.cache/trunk/launcher
I0914 09:17:51.401071    9809 global.go:122] virtualbox default: true priority: 6, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:unable to find VBoxManage in $PATH Reason: Fix:Install VirtualBox Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/virtualbox/ Version:}
I0914 09:17:51.401120    9809 global.go:122] vmware default: false priority: 5, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "vmrun": executable file not found in $PATH Reason: Fix:Install vmrun Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/vmware/ Version:}
I0914 09:17:51.489142    9809 docker.go:121] docker version: linux-20.10.21:Docker Desktop 4.14.1 (91661)
I0914 09:17:51.489284    9809 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0914 09:17:52.067503    9809 info.go:266] docker info: {ID:DFNP:IDWQ:HUK5:GJR4:W7B2:INSB:CGDI:G7MX:WCLQ:UU4X:QZUO:CG34 Containers:9 ContainersRunning:2 ContainersPaused:0 ContainersStopped:7 Images:10 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:62 OomKillDisable:false NGoroutines:66 SystemTime:2023-09-14 02:17:51.549914637 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:4 KernelVersion:5.15.49-linuxkit OperatingSystem:Docker Desktop OSType:linux Architecture:aarch64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:8231948288 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:20.10.21 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:1c90a442489720eec95342e1789ee8a5e1b9536f Expected:1c90a442489720eec95342e1789ee8a5e1b9536f} RuncCommit:{ID:v1.1.4-0-g5fd4c4d Expected:v1.1.4-0-g5fd4c4d} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=default name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/local/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.9.1] map[Name:compose Path:/usr/local/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.12.2] map[Name:dev Path:/usr/local/lib/docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.0.3] map[Name:extension Path:/usr/local/lib/docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.13] map[Name:sbom Path:/usr/local/lib/docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:/usr/local/lib/docker/cli-plugins/docker-scan SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.21.0]] Warnings:<nil>}}
I0914 09:17:52.067573    9809 global.go:122] docker default: true priority: 9, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0914 09:17:52.067781    9809 global.go:122] podman default: true priority: 3, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "podman": executable file not found in $PATH Reason: Fix:Install Podman Doc:https://minikube.sigs.k8s.io/docs/drivers/podman/ Version:}
I0914 09:17:52.067805    9809 global.go:122] ssh default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0914 09:17:52.067908    9809 global.go:122] hyperkit default: true priority: 8, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "hyperkit": executable file not found in $PATH Reason: Fix:Run 'brew install hyperkit' Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/hyperkit/ Version:}
I0914 09:17:52.067942    9809 global.go:122] parallels default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "prlctl": executable file not found in $PATH Reason: Fix:Install Parallels Desktop for Mac Doc:https://minikube.sigs.k8s.io/docs/drivers/parallels/ Version:}
I0914 09:17:52.068046    9809 global.go:122] qemu2 default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "qemu-system-aarch64": executable file not found in $PATH Reason: Fix:Install qemu-system Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/qemu/ Version:}
I0914 09:17:52.068055    9809 driver.go:308] not recommending "ssh" due to default: false
I0914 09:17:52.068064    9809 driver.go:343] Picked: docker
I0914 09:17:52.068070    9809 driver.go:344] Alternatives: [ssh]
I0914 09:17:52.068073    9809 driver.go:345] Rejects: [virtualbox vmware podman hyperkit parallels qemu2]
I0914 09:17:52.104122    9809 out.go:177] ✨  Automatically selected the docker driver
I0914 09:17:52.122185    9809 start.go:298] selected driver: docker
I0914 09:17:52.122209    9809 start.go:902] validating driver "docker" against <nil>
I0914 09:17:52.122222    9809 start.go:913] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0914 09:17:52.122332    9809 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0914 09:17:52.288261    9809 info.go:266] docker info: {ID:DFNP:IDWQ:HUK5:GJR4:W7B2:INSB:CGDI:G7MX:WCLQ:UU4X:QZUO:CG34 Containers:9 ContainersRunning:2 ContainersPaused:0 ContainersStopped:7 Images:10 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:62 OomKillDisable:false NGoroutines:66 SystemTime:2023-09-14 02:17:52.185385929 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:4 KernelVersion:5.15.49-linuxkit OperatingSystem:Docker Desktop OSType:linux Architecture:aarch64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:8231948288 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:20.10.21 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:1c90a442489720eec95342e1789ee8a5e1b9536f Expected:1c90a442489720eec95342e1789ee8a5e1b9536f} RuncCommit:{ID:v1.1.4-0-g5fd4c4d Expected:v1.1.4-0-g5fd4c4d} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=default name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/local/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.9.1] map[Name:compose Path:/usr/local/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.12.2] map[Name:dev Path:/usr/local/lib/docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.0.3] map[Name:extension Path:/usr/local/lib/docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.13] map[Name:sbom Path:/usr/local/lib/docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:/usr/local/lib/docker/cli-plugins/docker-scan SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.21.0]] Warnings:<nil>}}
I0914 09:17:52.288426    9809 start_flags.go:305] no existing cluster config was found, will generate one from the flags 
I0914 09:17:52.288723    9809 start_flags.go:382] Using suggested 4000MB memory alloc based on sys=16384MB, container=7850MB
I0914 09:17:52.289118    9809 start_flags.go:901] Wait components to verify : map[apiserver:true system_pods:true]
I0914 09:17:52.306320    9809 out.go:177] 📌  Using Docker Desktop driver with root privileges
I0914 09:17:52.324158    9809 cni.go:84] Creating CNI manager for ""
I0914 09:17:52.324187    9809 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0914 09:17:52.324194    9809 start_flags.go:314] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I0914 09:17:52.324211    9809 start_flags.go:319] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0}
I0914 09:17:52.341103    9809 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0914 09:17:52.376295    9809 cache.go:122] Beginning downloading kic base image for docker with docker
I0914 09:17:52.393301    9809 out.go:177] 🚜  Pulling base image ...
I0914 09:17:52.411234    9809 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I0914 09:17:52.411290    9809 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 in local docker daemon
I0914 09:17:52.503976    9809 cache.go:150] Downloading gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 to local cache
I0914 09:17:52.504277    9809 image.go:63] Checking for gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 in local cache directory
I0914 09:17:52.504415    9809 image.go:118] Writing gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 to local cache
I0914 09:17:52.715000    9809 preload.go:119] Found remote preload: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.27.4/preloaded-images-k8s-v18-v1.27.4-docker-overlay2-arm64.tar.lz4
I0914 09:17:52.715015    9809 cache.go:57] Caching tarball of preloaded images
I0914 09:17:52.715339    9809 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I0914 09:17:52.733903    9809 out.go:177] 💾  Downloading Kubernetes v1.27.4 preload ...
I0914 09:17:52.768916    9809 preload.go:238] getting checksum for preloaded-images-k8s-v18-v1.27.4-docker-overlay2-arm64.tar.lz4 ...
I0914 09:17:53.177387    9809 download.go:107] Downloading: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.27.4/preloaded-images-k8s-v18-v1.27.4-docker-overlay2-arm64.tar.lz4?checksum=md5:883217b4c813700d926caf1a3f55f0b8 -> /Users/nitas/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.4-docker-overlay2-arm64.tar.lz4
I0914 09:21:13.200675    9809 preload.go:249] saving checksum for preloaded-images-k8s-v18-v1.27.4-docker-overlay2-arm64.tar.lz4 ...
I0914 09:21:13.200859    9809 preload.go:256] verifying checksum of /Users/nitas/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.4-docker-overlay2-arm64.tar.lz4 ...
I0914 09:21:14.206191    9809 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.4 on docker
I0914 09:21:14.206592    9809 profile.go:148] Saving config to /Users/nitas/.minikube/profiles/minikube/config.json ...
I0914 09:21:14.206621    9809 lock.go:35] WriteFile acquiring /Users/nitas/.minikube/profiles/minikube/config.json: {Name:mk54cf3941963fdf7d832169d41d13a05697ce91 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0914 09:22:20.324625    9809 cache.go:153] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 as a tarball
I0914 09:22:20.324655    9809 cache.go:163] Loading gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 from local cache
I0914 09:23:01.654619    9809 cache.go:165] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 from cached tarball
I0914 09:23:01.654744    9809 cache.go:195] Successfully downloaded all kic artifacts
I0914 09:23:01.654967    9809 start.go:365] acquiring machines lock for minikube: {Name:mk0a69b8b06428f9889e609172be89f75f23ff71 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0914 09:23:01.655907    9809 start.go:369] acquired machines lock for "minikube" in 814.166µs
I0914 09:23:01.656161    9809 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0} &{Name: IP: Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}
I0914 09:23:01.656481    9809 start.go:125] createHost starting for "" (driver="docker")
I0914 09:23:01.700483    9809 out.go:204] 🔥  Creating docker container (CPUs=2, Memory=4000MB) ...
I0914 09:23:01.701771    9809 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0914 09:23:01.701797    9809 client.go:168] LocalClient.Create starting
I0914 09:23:01.702306    9809 main.go:141] libmachine: Creating CA: /Users/nitas/.minikube/certs/ca.pem
I0914 09:23:01.884562    9809 main.go:141] libmachine: Creating client certificate: /Users/nitas/.minikube/certs/cert.pem
I0914 09:23:02.001507    9809 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0914 09:23:02.080758    9809 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0914 09:23:02.080901    9809 network_create.go:281] running [docker network inspect minikube] to gather additional debugging logs...
I0914 09:23:02.080928    9809 cli_runner.go:164] Run: docker network inspect minikube
W0914 09:23:02.154793    9809 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0914 09:23:02.154830    9809 network_create.go:284] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error: No such network: minikube
I0914 09:23:02.154852    9809 network_create.go:286] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error: No such network: minikube

** /stderr **
I0914 09:23:02.154941    9809 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0914 09:23:02.230079    9809 network.go:209] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0x14016280b90}
I0914 09:23:02.230145    9809 network_create.go:123] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0914 09:23:02.230220    9809 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0914 09:23:02.355083    9809 network_create.go:107] docker network minikube 192.168.49.0/24 created
I0914 09:23:02.355154    9809 kic.go:117] calculated static IP "192.168.49.2" for the "minikube" container
I0914 09:23:02.355285    9809 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0914 09:23:02.426211    9809 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0914 09:23:02.496037    9809 oci.go:103] Successfully created a docker volume minikube
I0914 09:23:02.496157    9809 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -d /var/lib
I0914 09:23:05.338752    9809 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -d /var/lib: (2.842585334s)
I0914 09:23:05.338789    9809 oci.go:107] Successfully prepared a docker volume minikube
I0914 09:23:05.338807    9809 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I0914 09:23:05.338847    9809 kic.go:190] Starting extracting preloaded images to volume ...
I0914 09:23:05.339053    9809 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v /Users/nitas/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.4-docker-overlay2-arm64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -I lz4 -xf /preloaded.tar -C /extractDir
I0914 09:23:35.293388    9809 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v /Users/nitas/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.27.4-docker-overlay2-arm64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 -I lz4 -xf /preloaded.tar -C /extractDir: (29.95547025s)
I0914 09:23:35.293429    9809 kic.go:199] duration metric: took 29.955928 seconds to extract preloaded images to volume
I0914 09:23:35.293619    9809 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0914 09:23:36.844735    9809 cli_runner.go:217] Completed: docker info --format "'{{json .SecurityOptions}}'": (1.551078541s)
I0914 09:23:36.844980    9809 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=4000mb --memory-swap=4000mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631
I0914 09:23:37.528815    9809 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0914 09:23:37.640927    9809 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0914 09:23:37.765582    9809 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0914 09:23:38.086117    9809 oci.go:144] the created container "minikube" has a running status.
I0914 09:23:38.086188    9809 kic.go:221] Creating ssh key for kic: /Users/nitas/.minikube/machines/minikube/id_rsa...
I0914 09:23:38.410210    9809 kic_runner.go:191] docker (temp): /Users/nitas/.minikube/machines/minikube/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0914 09:23:39.185147    9809 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0914 09:23:39.318036    9809 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0914 09:23:39.318067    9809 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0914 09:23:39.551616    9809 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0914 09:23:39.647180    9809 machine.go:88] provisioning docker machine ...
I0914 09:23:39.647720    9809 ubuntu.go:169] provisioning hostname "minikube"
I0914 09:23:39.647878    9809 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0914 09:23:39.756000    9809 main.go:141] libmachine: Using SSH client type: native
I0914 09:23:39.756930    9809 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102f4b710] 0x102f4de80 <nil>  [] 0s} 127.0.0.1 53609 <nil> <nil>}
I0914 09:23:39.756943    9809 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0914 09:23:40.138380    9809 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0914 09:23:40.138548    9809 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0914 09:23:40.270580    9809 main.go:141] libmachine: Using SSH client type: native
I0914 09:23:40.271134    9809 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102f4b710] 0x102f4de80 <nil>  [] 0s} 127.0.0.1 53609 <nil> <nil>}
I0914 09:23:40.271149    9809 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0914 09:23:40.462084    9809 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0914 09:23:40.462111    9809 ubuntu.go:175] set auth options {CertDir:/Users/nitas/.minikube CaCertPath:/Users/nitas/.minikube/certs/ca.pem CaPrivateKeyPath:/Users/nitas/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/Users/nitas/.minikube/machines/server.pem ServerKeyPath:/Users/nitas/.minikube/machines/server-key.pem ClientKeyPath:/Users/nitas/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/Users/nitas/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/Users/nitas/.minikube}
I0914 09:23:40.462135    9809 ubuntu.go:177] setting up certificates
I0914 09:23:40.462149    9809 provision.go:83] configureAuth start
I0914 09:23:40.462227    9809 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0914 09:23:40.540126    9809 provision.go:138] copyHostCerts
I0914 09:23:40.540268    9809 exec_runner.go:151] cp: /Users/nitas/.minikube/certs/ca.pem --> /Users/nitas/.minikube/ca.pem (1074 bytes)
I0914 09:23:40.540702    9809 exec_runner.go:151] cp: /Users/nitas/.minikube/certs/cert.pem --> /Users/nitas/.minikube/cert.pem (1119 bytes)
I0914 09:23:40.541045    9809 exec_runner.go:151] cp: /Users/nitas/.minikube/certs/key.pem --> /Users/nitas/.minikube/key.pem (1679 bytes)
I0914 09:23:40.542030    9809 provision.go:112] generating server cert: /Users/nitas/.minikube/machines/server.pem ca-key=/Users/nitas/.minikube/certs/ca.pem private-key=/Users/nitas/.minikube/certs/ca-key.pem org=nitas.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0914 09:23:40.977920    9809 provision.go:172] copyRemoteCerts
I0914 09:23:40.978393    9809 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0914 09:23:40.978441    9809 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0914 09:23:41.090264    9809 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:53609 SSHKeyPath:/Users/nitas/.minikube/machines/minikube/id_rsa Username:docker}
I0914 09:23:41.203763    9809 ssh_runner.go:362] scp /Users/nitas/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1074 bytes)
I0914 09:23:41.244294    9809 ssh_runner.go:362] scp /Users/nitas/.minikube/machines/server.pem --> /etc/docker/server.pem (1200 bytes)
I0914 09:23:41.284498    9809 ssh_runner.go:362] scp /Users/nitas/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0914 09:23:41.322104    9809 provision.go:86] duration metric: configureAuth took 859.947709ms
I0914 09:23:41.322127    9809 ubuntu.go:193] setting minikube options for container-runtime
I0914 09:23:41.322637    9809 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.27.4
I0914 09:23:41.322727    9809 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0914 09:23:41.404323    9809 main.go:141] libmachine: Using SSH client type: native
I0914 09:23:41.404823    9809 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102f4b710] 0x102f4de80 <nil>  [] 0s} 127.0.0.1 53609 <nil> <nil>}
I0914 09:23:41.404829    9809 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0914 09:23:41.560544    9809 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0914 09:23:41.560570    9809 ubuntu.go:71] root file system type: overlay
I0914 09:23:41.560768    9809 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0914 09:23:41.560880    9809 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0914 09:23:41.635690    9809 main.go:141] libmachine: Using SSH client type: native
I0914 09:23:41.636116    9809 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102f4b710] 0x102f4de80 <nil>  [] 0s} 127.0.0.1 53609 <nil> <nil>}
I0914 09:23:41.636178    9809 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0914 09:23:41.797813    9809 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0914 09:23:41.797894    9809 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0914 09:23:41.870609    9809 main.go:141] libmachine: Using SSH client type: native
I0914 09:23:41.871058    9809 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102f4b710] 0x102f4de80 <nil>  [] 0s} 127.0.0.1 53609 <nil> <nil>}
I0914 09:23:41.871071    9809 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0914 09:23:43.163103    9809 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2023-07-07 14:51:01.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2023-09-14 02:23:41.790850007 +0000
@@ -1,30 +1,32 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
@@ -32,16 +34,16 @@
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0914 09:23:43.163120    9809 machine.go:91] provisioned docker machine in 3.516067875s
I0914 09:23:43.163129    9809 client.go:171] LocalClient.Create took 41.463194625s
I0914 09:23:43.163174    9809 start.go:167] duration metric: libmachine.API.Create for "minikube" took 41.463272875s
I0914 09:23:43.163181    9809 start.go:300] post-start starting for "minikube" (driver="docker")
I0914 09:23:43.163192    9809 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0914 09:23:43.163324    9809 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0914 09:23:43.163383    9809 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0914 09:23:43.246360    9809 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:53609 SSHKeyPath:/Users/nitas/.minikube/machines/minikube/id_rsa Username:docker}
I0914 09:23:43.348305    9809 ssh_runner.go:195] Run: cat /etc/os-release
I0914 09:23:43.356098    9809 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0914 09:23:43.356117    9809 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0914 09:23:43.356124    9809 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0914 09:23:43.356128    9809 info.go:137] Remote host: Ubuntu 22.04.2 LTS
I0914 09:23:43.356135    9809 filesync.go:126] Scanning /Users/nitas/.minikube/addons for local assets ...
I0914 09:23:43.356266    9809 filesync.go:126] Scanning /Users/nitas/.minikube/files for local assets ...
I0914 09:23:43.356307    9809 start.go:303] post-start completed in 193.131125ms
I0914 09:23:43.356786    9809 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0914 09:23:43.425262    9809 profile.go:148] Saving config to /Users/nitas/.minikube/profiles/minikube/config.json ...
I0914 09:23:43.425774    9809 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0914 09:23:43.425810    9809 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0914 09:23:43.491386    9809 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:53609 SSHKeyPath:/Users/nitas/.minikube/machines/minikube/id_rsa Username:docker}
I0914 09:23:43.586550    9809 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0914 09:23:43.595932    9809 start.go:128] duration metric: createHost completed in 41.941318542s
I0914 09:23:43.595947    9809 start.go:83] releasing machines lock for "minikube", held for 41.94191s
I0914 09:23:43.596023    9809 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0914 09:23:43.663130    9809 ssh_runner.go:195] Run: cat /version.json
I0914 09:23:43.663208    9809 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0914 09:23:43.663358    9809 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0914 09:23:43.664017    9809 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0914 09:23:43.735710    9809 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:53609 SSHKeyPath:/Users/nitas/.minikube/machines/minikube/id_rsa Username:docker}
I0914 09:23:43.735754    9809 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:53609 SSHKeyPath:/Users/nitas/.minikube/machines/minikube/id_rsa Username:docker}
I0914 09:23:44.261114    9809 ssh_runner.go:195] Run: systemctl --version
I0914 09:23:44.270639    9809 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0914 09:23:44.280581    9809 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0914 09:23:44.316718    9809 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0914 09:23:44.316859    9809 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0914 09:23:44.352998    9809 cni.go:262] disabled [/etc/cni/net.d/87-podman-bridge.conflist, /etc/cni/net.d/100-crio-bridge.conf] bridge cni config(s)
I0914 09:23:44.353018    9809 start.go:466] detecting cgroup driver to use...
I0914 09:23:44.353035    9809 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0914 09:23:44.353264    9809 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0914 09:23:44.377431    9809 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0914 09:23:44.395858    9809 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0914 09:23:44.411565    9809 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I0914 09:23:44.411685    9809 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0914 09:23:44.427361    9809 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0914 09:23:44.443634    9809 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0914 09:23:44.459114    9809 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0914 09:23:44.475110    9809 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0914 09:23:44.491920    9809 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0914 09:23:44.507375    9809 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0914 09:23:44.521068    9809 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0914 09:23:44.534001    9809 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0914 09:23:44.627646    9809 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0914 09:23:44.735273    9809 start.go:466] detecting cgroup driver to use...
I0914 09:23:44.735295    9809 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0914 09:23:44.735434    9809 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0914 09:23:44.753370    9809 cruntime.go:276] skipping containerd shutdown because we are bound to it
I0914 09:23:44.753503    9809 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0914 09:23:44.771101    9809 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0914 09:23:44.796766    9809 ssh_runner.go:195] Run: which cri-dockerd
I0914 09:23:44.804048    9809 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0914 09:23:44.828923    9809 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0914 09:23:44.854655    9809 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0914 09:23:44.964665    9809 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0914 09:23:45.079590    9809 docker.go:535] configuring docker to use "cgroupfs" as cgroup driver...
I0914 09:23:45.079609    9809 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (144 bytes)
I0914 09:23:45.104594    9809 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0914 09:23:45.203438    9809 ssh_runner.go:195] Run: sudo systemctl restart docker
I0914 09:23:45.531727    9809 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0914 09:23:45.617553    9809 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0914 09:23:45.715236    9809 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0914 09:23:45.814305    9809 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0914 09:23:45.906547    9809 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0914 09:23:45.938721    9809 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0914 09:23:46.034378    9809 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I0914 09:23:46.196841    9809 start.go:513] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0914 09:23:46.197811    9809 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0914 09:23:46.210806    9809 start.go:534] Will wait 60s for crictl version
I0914 09:23:46.210890    9809 ssh_runner.go:195] Run: which crictl
I0914 09:23:46.219151    9809 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0914 09:23:46.305757    9809 start.go:550] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  24.0.4
RuntimeApiVersion:  v1
I0914 09:23:46.305874    9809 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0914 09:23:46.356524    9809 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0914 09:23:46.413705    9809 out.go:204] 🐳  Preparing Kubernetes v1.27.4 on Docker 24.0.4 ...
I0914 09:23:46.413849    9809 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0914 09:23:46.596015    9809 network.go:96] got host ip for mount in container by digging dns: 192.168.65.2
I0914 09:23:46.596566    9809 ssh_runner.go:195] Run: grep 192.168.65.2	host.minikube.internal$ /etc/hosts
I0914 09:23:46.604675    9809 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.65.2	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0914 09:23:46.621496    9809 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0914 09:23:46.696313    9809 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I0914 09:23:46.696408    9809 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0914 09:23:46.727523    9809 docker.go:636] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.27.4
registry.k8s.io/kube-controller-manager:v1.27.4
registry.k8s.io/kube-scheduler:v1.27.4
registry.k8s.io/kube-proxy:v1.27.4
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/etcd:3.5.7-0
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0914 09:23:46.727573    9809 docker.go:566] Images already preloaded, skipping extraction
I0914 09:23:46.727685    9809 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0914 09:23:46.755988    9809 docker.go:636] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.27.4
registry.k8s.io/kube-controller-manager:v1.27.4
registry.k8s.io/kube-scheduler:v1.27.4
registry.k8s.io/kube-proxy:v1.27.4
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/etcd:3.5.7-0
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0914 09:23:46.756001    9809 cache_images.go:84] Images are preloaded, skipping loading
I0914 09:23:46.756093    9809 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0914 09:23:46.850762    9809 cni.go:84] Creating CNI manager for ""
I0914 09:23:46.850777    9809 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0914 09:23:46.850829    9809 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0914 09:23:46.850851    9809 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.27.4 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0914 09:23:46.851067    9809 kubeadm.go:181] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.27.4
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0914 09:23:46.851166    9809 kubeadm.go:976] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.27.4/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0914 09:23:46.851319    9809 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.27.4
I0914 09:23:46.865303    9809 binaries.go:44] Found k8s binaries, skipping transfer
I0914 09:23:46.865531    9809 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0914 09:23:46.878671    9809 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (369 bytes)
I0914 09:23:46.902822    9809 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0914 09:23:46.927021    9809 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2091 bytes)
I0914 09:23:46.952315    9809 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0914 09:23:46.960160    9809 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0914 09:23:46.978223    9809 certs.go:56] Setting up /Users/nitas/.minikube/profiles/minikube for IP: 192.168.49.2
I0914 09:23:46.978260    9809 certs.go:190] acquiring lock for shared ca certs: {Name:mkf8cff3481b4c3322e30fd6172d276ea87f0cd9 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0914 09:23:46.978622    9809 certs.go:204] generating minikubeCA CA: /Users/nitas/.minikube/ca.key
I0914 09:23:47.248062    9809 crypto.go:156] Writing cert to /Users/nitas/.minikube/ca.crt ...
I0914 09:23:47.248070    9809 lock.go:35] WriteFile acquiring /Users/nitas/.minikube/ca.crt: {Name:mk5c1b6b8e2bd43c7245e2a6c0e6ef10d107056a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0914 09:23:47.248454    9809 crypto.go:164] Writing key to /Users/nitas/.minikube/ca.key ...
I0914 09:23:47.248461    9809 lock.go:35] WriteFile acquiring /Users/nitas/.minikube/ca.key: {Name:mk4f3eeda971176152e278c218b81ad926bbd6ef Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0914 09:23:47.248638    9809 certs.go:204] generating proxyClientCA CA: /Users/nitas/.minikube/proxy-client-ca.key
I0914 09:23:47.421894    9809 crypto.go:156] Writing cert to /Users/nitas/.minikube/proxy-client-ca.crt ...
I0914 09:23:47.421902    9809 lock.go:35] WriteFile acquiring /Users/nitas/.minikube/proxy-client-ca.crt: {Name:mk031a95855b131a597198fc7e808de5d285532a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0914 09:23:47.422289    9809 crypto.go:164] Writing key to /Users/nitas/.minikube/proxy-client-ca.key ...
I0914 09:23:47.422293    9809 lock.go:35] WriteFile acquiring /Users/nitas/.minikube/proxy-client-ca.key: {Name:mk559e12398560dbe39f5d0ace1a7d78c130a3c3 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0914 09:23:47.422512    9809 certs.go:319] generating minikube-user signed cert: /Users/nitas/.minikube/profiles/minikube/client.key
I0914 09:23:47.422523    9809 crypto.go:68] Generating cert /Users/nitas/.minikube/profiles/minikube/client.crt with IP's: []
I0914 09:23:47.681667    9809 crypto.go:156] Writing cert to /Users/nitas/.minikube/profiles/minikube/client.crt ...
I0914 09:23:47.681677    9809 lock.go:35] WriteFile acquiring /Users/nitas/.minikube/profiles/minikube/client.crt: {Name:mk8557e0fd40fbcd1b2df727d3ebe229ea7fea29 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0914 09:23:47.682075    9809 crypto.go:164] Writing key to /Users/nitas/.minikube/profiles/minikube/client.key ...
I0914 09:23:47.682078    9809 lock.go:35] WriteFile acquiring /Users/nitas/.minikube/profiles/minikube/client.key: {Name:mkf654812e9ab408ba01cbb53e2f0ed67bb4be8a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0914 09:23:47.682268    9809 certs.go:319] generating minikube signed cert: /Users/nitas/.minikube/profiles/minikube/apiserver.key.dd3b5fb2
I0914 09:23:47.682286    9809 crypto.go:68] Generating cert /Users/nitas/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2 with IP's: [192.168.49.2 10.96.0.1 127.0.0.1 10.0.0.1]
I0914 09:23:47.925743    9809 crypto.go:156] Writing cert to /Users/nitas/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2 ...
I0914 09:23:47.925752    9809 lock.go:35] WriteFile acquiring /Users/nitas/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2: {Name:mkc462c13465d98041cfee743ac8d0cf4b5eea48 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0914 09:23:47.926146    9809 crypto.go:164] Writing key to /Users/nitas/.minikube/profiles/minikube/apiserver.key.dd3b5fb2 ...
I0914 09:23:47.926149    9809 lock.go:35] WriteFile acquiring /Users/nitas/.minikube/profiles/minikube/apiserver.key.dd3b5fb2: {Name:mk67c242df23cfccdaf679fde0d444286e49276e Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0914 09:23:47.926328    9809 certs.go:337] copying /Users/nitas/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2 -> /Users/nitas/.minikube/profiles/minikube/apiserver.crt
I0914 09:23:47.926464    9809 certs.go:341] copying /Users/nitas/.minikube/profiles/minikube/apiserver.key.dd3b5fb2 -> /Users/nitas/.minikube/profiles/minikube/apiserver.key
I0914 09:23:47.926580    9809 certs.go:319] generating aggregator signed cert: /Users/nitas/.minikube/profiles/minikube/proxy-client.key
I0914 09:23:47.926596    9809 crypto.go:68] Generating cert /Users/nitas/.minikube/profiles/minikube/proxy-client.crt with IP's: []
I0914 09:23:48.085561    9809 crypto.go:156] Writing cert to /Users/nitas/.minikube/profiles/minikube/proxy-client.crt ...
I0914 09:23:48.085572    9809 lock.go:35] WriteFile acquiring /Users/nitas/.minikube/profiles/minikube/proxy-client.crt: {Name:mk8865250e981d21e2ea7df6be219940c5af6925 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0914 09:23:48.085985    9809 crypto.go:164] Writing key to /Users/nitas/.minikube/profiles/minikube/proxy-client.key ...
I0914 09:23:48.085988    9809 lock.go:35] WriteFile acquiring /Users/nitas/.minikube/profiles/minikube/proxy-client.key: {Name:mk2cce36c2528c1fbea36b03e2adfc6390ac9739 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0914 09:23:48.086347    9809 certs.go:437] found cert: /Users/nitas/.minikube/certs/Users/nitas/.minikube/certs/ca-key.pem (1679 bytes)
I0914 09:23:48.086382    9809 certs.go:437] found cert: /Users/nitas/.minikube/certs/Users/nitas/.minikube/certs/ca.pem (1074 bytes)
I0914 09:23:48.086413    9809 certs.go:437] found cert: /Users/nitas/.minikube/certs/Users/nitas/.minikube/certs/cert.pem (1119 bytes)
I0914 09:23:48.086436    9809 certs.go:437] found cert: /Users/nitas/.minikube/certs/Users/nitas/.minikube/certs/key.pem (1679 bytes)
I0914 09:23:48.087047    9809 ssh_runner.go:362] scp /Users/nitas/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0914 09:23:48.121845    9809 ssh_runner.go:362] scp /Users/nitas/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0914 09:23:48.154133    9809 ssh_runner.go:362] scp /Users/nitas/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0914 09:23:48.187688    9809 ssh_runner.go:362] scp /Users/nitas/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0914 09:23:48.220511    9809 ssh_runner.go:362] scp /Users/nitas/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0914 09:23:48.255410    9809 ssh_runner.go:362] scp /Users/nitas/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0914 09:23:48.288167    9809 ssh_runner.go:362] scp /Users/nitas/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0914 09:23:48.320997    9809 ssh_runner.go:362] scp /Users/nitas/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0914 09:23:48.361162    9809 ssh_runner.go:362] scp /Users/nitas/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0914 09:23:48.401516    9809 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0914 09:23:48.435402    9809 ssh_runner.go:195] Run: openssl version
I0914 09:23:48.449811    9809 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0914 09:23:48.468443    9809 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0914 09:23:48.477507    9809 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 Sep 14 02:23 /usr/share/ca-certificates/minikubeCA.pem
I0914 09:23:48.477595    9809 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0914 09:23:48.491130    9809 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0914 09:23:48.508350    9809 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd
I0914 09:23:48.516858    9809 certs.go:353] certs directory doesn't exist, likely first start: ls /var/lib/minikube/certs/etcd: Process exited with status 2
stdout:

stderr:
ls: cannot access '/var/lib/minikube/certs/etcd': No such file or directory
I0914 09:23:48.516959    9809 kubeadm.go:404] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0}
I0914 09:23:48.517107    9809 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0914 09:23:48.549851    9809 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0914 09:23:48.564467    9809 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0914 09:23:48.579475    9809 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I0914 09:23:48.579615    9809 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0914 09:23:48.595056    9809 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0914 09:23:48.595092    9809 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0914 09:23:48.674647    9809 kubeadm.go:322] [init] Using Kubernetes version: v1.27.4
I0914 09:23:48.674713    9809 kubeadm.go:322] [preflight] Running pre-flight checks
I0914 09:23:48.897506    9809 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I0914 09:23:48.897649    9809 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0914 09:23:48.897783    9809 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0914 09:23:49.282438    9809 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0914 09:23:49.319641    9809 out.go:204]     ▪ Generating certificates and keys ...
I0914 09:23:49.319828    9809 kubeadm.go:322] [certs] Using existing ca certificate authority
I0914 09:23:49.319938    9809 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I0914 09:23:49.745148    9809 kubeadm.go:322] [certs] Generating "apiserver-kubelet-client" certificate and key
I0914 09:23:49.842422    9809 kubeadm.go:322] [certs] Generating "front-proxy-ca" certificate and key
I0914 09:23:49.988082    9809 kubeadm.go:322] [certs] Generating "front-proxy-client" certificate and key
I0914 09:23:50.141283    9809 kubeadm.go:322] [certs] Generating "etcd/ca" certificate and key
I0914 09:23:50.408769    9809 kubeadm.go:322] [certs] Generating "etcd/server" certificate and key
I0914 09:23:50.408941    9809 kubeadm.go:322] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0914 09:23:50.623649    9809 kubeadm.go:322] [certs] Generating "etcd/peer" certificate and key
I0914 09:23:50.623824    9809 kubeadm.go:322] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0914 09:23:50.702232    9809 kubeadm.go:322] [certs] Generating "etcd/healthcheck-client" certificate and key
I0914 09:23:51.053845    9809 kubeadm.go:322] [certs] Generating "apiserver-etcd-client" certificate and key
I0914 09:23:51.286738    9809 kubeadm.go:322] [certs] Generating "sa" key and public key
I0914 09:23:51.286826    9809 kubeadm.go:322] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0914 09:23:51.528934    9809 kubeadm.go:322] [kubeconfig] Writing "admin.conf" kubeconfig file
I0914 09:23:51.619655    9809 kubeadm.go:322] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0914 09:23:51.781609    9809 kubeadm.go:322] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0914 09:23:52.046322    9809 kubeadm.go:322] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0914 09:23:52.072037    9809 kubeadm.go:322] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0914 09:23:52.076060    9809 kubeadm.go:322] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0914 09:23:52.076119    9809 kubeadm.go:322] [kubelet-start] Starting the kubelet
I0914 09:23:52.188316    9809 kubeadm.go:322] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0914 09:23:52.224451    9809 out.go:204]     ▪ Booting up control plane ...
I0914 09:23:52.224731    9809 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0914 09:23:52.224929    9809 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0914 09:23:52.225023    9809 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0914 09:23:52.225148    9809 kubeadm.go:322] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0914 09:23:52.225374    9809 kubeadm.go:322] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
I0914 09:23:57.699375    9809 kubeadm.go:322] [apiclient] All control plane components are healthy after 5.502445 seconds
I0914 09:23:57.699570    9809 kubeadm.go:322] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0914 09:23:57.710716    9809 kubeadm.go:322] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0914 09:23:58.225262    9809 kubeadm.go:322] [upload-certs] Skipping phase. Please see --upload-certs
I0914 09:23:58.225502    9809 kubeadm.go:322] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0914 09:23:58.734338    9809 kubeadm.go:322] [bootstrap-token] Using token: yx2oqe.sl5pbe8dlh8avo8i
I0914 09:23:58.769634    9809 out.go:204]     ▪ Configuring RBAC rules ...
I0914 09:23:58.769841    9809 kubeadm.go:322] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0914 09:23:58.773080    9809 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0914 09:23:58.782724    9809 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0914 09:23:58.788180    9809 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0914 09:23:58.803042    9809 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0914 09:23:58.809014    9809 kubeadm.go:322] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0914 09:23:58.826648    9809 kubeadm.go:322] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0914 09:23:59.092848    9809 kubeadm.go:322] [addons] Applied essential addon: CoreDNS
I0914 09:23:59.180253    9809 kubeadm.go:322] [addons] Applied essential addon: kube-proxy
I0914 09:23:59.181595    9809 kubeadm.go:322] 
I0914 09:23:59.181650    9809 kubeadm.go:322] Your Kubernetes control-plane has initialized successfully!
I0914 09:23:59.181653    9809 kubeadm.go:322] 
I0914 09:23:59.181738    9809 kubeadm.go:322] To start using your cluster, you need to run the following as a regular user:
I0914 09:23:59.181744    9809 kubeadm.go:322] 
I0914 09:23:59.181767    9809 kubeadm.go:322]   mkdir -p $HOME/.kube
I0914 09:23:59.182798    9809 kubeadm.go:322]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0914 09:23:59.182844    9809 kubeadm.go:322]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0914 09:23:59.182847    9809 kubeadm.go:322] 
I0914 09:23:59.182899    9809 kubeadm.go:322] Alternatively, if you are the root user, you can run:
I0914 09:23:59.182902    9809 kubeadm.go:322] 
I0914 09:23:59.182994    9809 kubeadm.go:322]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0914 09:23:59.183003    9809 kubeadm.go:322] 
I0914 09:23:59.183080    9809 kubeadm.go:322] You should now deploy a pod network to the cluster.
I0914 09:23:59.183161    9809 kubeadm.go:322] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0914 09:23:59.183215    9809 kubeadm.go:322]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0914 09:23:59.183219    9809 kubeadm.go:322] 
I0914 09:23:59.183492    9809 kubeadm.go:322] You can now join any number of control-plane nodes by copying certificate authorities
I0914 09:23:59.183562    9809 kubeadm.go:322] and service account keys on each node and then running the following as root:
I0914 09:23:59.183565    9809 kubeadm.go:322] 
I0914 09:23:59.183641    9809 kubeadm.go:322]   kubeadm join control-plane.minikube.internal:8443 --token yx2oqe.sl5pbe8dlh8avo8i \
I0914 09:23:59.183726    9809 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:63ac7ca6af13139459b81b307751042df716cc896943e6f0ad13096770cb4901 \
I0914 09:23:59.183751    9809 kubeadm.go:322] 	--control-plane 
I0914 09:23:59.183755    9809 kubeadm.go:322] 
I0914 09:23:59.184068    9809 kubeadm.go:322] Then you can join any number of worker nodes by running the following on each as root:
I0914 09:23:59.184071    9809 kubeadm.go:322] 
I0914 09:23:59.186462    9809 kubeadm.go:322] kubeadm join control-plane.minikube.internal:8443 --token yx2oqe.sl5pbe8dlh8avo8i \
I0914 09:23:59.186578    9809 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:63ac7ca6af13139459b81b307751042df716cc896943e6f0ad13096770cb4901 
I0914 09:23:59.194783    9809 kubeadm.go:322] 	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
I0914 09:23:59.194976    9809 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0914 09:23:59.194997    9809 cni.go:84] Creating CNI manager for ""
I0914 09:23:59.195056    9809 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0914 09:23:59.248105    9809 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I0914 09:23:59.265259    9809 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0914 09:23:59.291108    9809 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (457 bytes)
I0914 09:23:59.395081    9809 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0914 09:23:59.395229    9809 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.4/kubectl label nodes minikube.k8s.io/version=v1.31.2 minikube.k8s.io/commit=fd7ecd9c4599bef9f04c0986c4a0187f98a4396e minikube.k8s.io/name=minikube minikube.k8s.io/updated_at=2023_09_14T09_23_59_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig
I0914 09:23:59.395324    9809 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.27.4/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0914 09:23:59.464626    9809 ops.go:34] apiserver oom_adj: -16
I0914 09:23:59.752811    9809 kubeadm.go:1081] duration metric: took 357.672ms to wait for elevateKubeSystemPrivileges.
I0914 09:23:59.782950    9809 kubeadm.go:406] StartCluster complete in 11.266493375s
I0914 09:23:59.782992    9809 settings.go:142] acquiring lock: {Name:mkfa9df6c52ae940996a444f86f7b1076efb9189 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0914 09:23:59.783234    9809 settings.go:150] Updating kubeconfig:  /Users/nitas/.kube/config
I0914 09:23:59.786799    9809 lock.go:35] WriteFile acquiring /Users/nitas/.kube/config: {Name:mk01923324da0105164ebb1993b1d74390abda90 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0914 09:23:59.787484    9809 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.4/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0914 09:23:59.787598    9809 addons.go:499] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false volumesnapshots:false]
I0914 09:23:59.787731    9809 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0914 09:23:59.787730    9809 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0914 09:23:59.787744    9809 addons.go:231] Setting addon storage-provisioner=true in "minikube"
I0914 09:23:59.787744    9809 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0914 09:23:59.787809    9809 host.go:66] Checking if "minikube" exists ...
I0914 09:23:59.787851    9809 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.27.4
I0914 09:23:59.788216    9809 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0914 09:23:59.788294    9809 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0914 09:23:59.867639    9809 kapi.go:248] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0914 09:23:59.867735    9809 start.go:223] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}
I0914 09:23:59.886589    9809 out.go:177] 🔎  Verifying Kubernetes components...
I0914 09:23:59.922737    9809 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0914 09:23:59.969499    9809 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0914 09:23:59.943360    9809 addons.go:231] Setting addon default-storageclass=true in "minikube"
I0914 09:24:00.003584    9809 host.go:66] Checking if "minikube" exists ...
I0914 09:24:00.004099    9809 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0914 09:24:00.004106    9809 addons.go:423] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0914 09:24:00.004114    9809 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0914 09:24:00.004155    9809 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0914 09:24:00.035071    9809 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0914 09:24:00.035196    9809 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.4/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.2 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.27.4/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0914 09:24:00.186255    9809 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:53609 SSHKeyPath:/Users/nitas/.minikube/machines/minikube/id_rsa Username:docker}
I0914 09:24:00.191685    9809 addons.go:423] installing /etc/kubernetes/addons/storageclass.yaml
I0914 09:24:00.191696    9809 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0914 09:24:00.191796    9809 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0914 09:24:00.226585    9809 api_server.go:52] waiting for apiserver process to appear ...
I0914 09:24:00.226722    9809 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0914 09:24:00.360031    9809 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:53609 SSHKeyPath:/Users/nitas/.minikube/machines/minikube/id_rsa Username:docker}
I0914 09:24:00.645389    9809 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.4/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0914 09:24:00.681474    9809 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.4/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0914 09:24:02.779802    9809 ssh_runner.go:235] Completed: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.4/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.2 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.27.4/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -": (2.744675708s)
I0914 09:24:02.779824    9809 start.go:901] {"host.minikube.internal": 192.168.65.2} host record injected into CoreDNS's ConfigMap
I0914 09:24:02.779872    9809 ssh_runner.go:235] Completed: sudo pgrep -xnf kube-apiserver.*minikube.*: (2.553230959s)
I0914 09:24:02.779933    9809 api_server.go:72] duration metric: took 2.912259167s to wait for apiserver process to appear ...
I0914 09:24:02.779939    9809 api_server.go:88] waiting for apiserver healthz status ...
I0914 09:24:02.779986    9809 api_server.go:253] Checking apiserver healthz at https://127.0.0.1:53613/healthz ...
I0914 09:24:02.795882    9809 api_server.go:279] https://127.0.0.1:53613/healthz returned 200:
ok
I0914 09:24:02.800065    9809 api_server.go:141] control plane version: v1.27.4
I0914 09:24:02.800080    9809 api_server.go:131] duration metric: took 20.136667ms to wait for apiserver health ...
I0914 09:24:02.800086    9809 system_pods.go:43] waiting for kube-system pods to appear ...
I0914 09:24:02.813592    9809 system_pods.go:59] 4 kube-system pods found
I0914 09:24:02.813607    9809 system_pods.go:61] "etcd-minikube" [ee6578b3-fa38-4a85-8bc6-d7d16e3fb3ee] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0914 09:24:02.813615    9809 system_pods.go:61] "kube-apiserver-minikube" [9b8cb09b-02a1-439c-8eed-15d258f63708] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0914 09:24:02.813622    9809 system_pods.go:61] "kube-controller-manager-minikube" [c1354a26-0220-43ad-998a-fd5f83fff897] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0914 09:24:02.813628    9809 system_pods.go:61] "kube-scheduler-minikube" [91c2e56e-97bd-4e9b-b55f-ee6722dc2f32] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0914 09:24:02.813632    9809 system_pods.go:74] duration metric: took 13.543083ms to wait for pod list to return data ...
I0914 09:24:02.813639    9809 kubeadm.go:581] duration metric: took 2.945968417s to wait for : map[apiserver:true system_pods:true] ...
I0914 09:24:02.813649    9809 node_conditions.go:102] verifying NodePressure condition ...
I0914 09:24:02.830386    9809 node_conditions.go:122] node storage ephemeral capacity is 61202244Ki
I0914 09:24:02.830397    9809 node_conditions.go:123] node cpu capacity is 4
I0914 09:24:02.830431    9809 node_conditions.go:105] duration metric: took 16.759542ms to run NodePressure ...
I0914 09:24:02.830441    9809 start.go:228] waiting for startup goroutines ...
I0914 09:24:03.083154    9809 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.4/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml: (2.437844625s)
I0914 09:24:03.083170    9809 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.4/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml: (2.401781042s)
I0914 09:24:03.103603    9809 out.go:177] 🌟  Enabled addons: storage-provisioner, default-storageclass
I0914 09:24:03.143556    9809 addons.go:502] enable addons completed in 3.356106584s: enabled=[storage-provisioner default-storageclass]
I0914 09:24:03.143580    9809 start.go:233] waiting for cluster config update ...
I0914 09:24:03.143596    9809 start.go:242] writing updated cluster config ...
I0914 09:24:03.144166    9809 ssh_runner.go:195] Run: rm -f paused
I0914 09:24:03.206407    9809 start.go:600] kubectl: 1.25.2, cluster: 1.27.4 (minor skew: 2)
I0914 09:24:03.223637    9809 out.go:177] 
W0914 09:24:03.240741    9809 out.go:239] ❗  /usr/local/bin/kubectl is version 1.25.2, which may have incompatibilities with Kubernetes 1.27.4.
I0914 09:24:03.258619    9809 out.go:177]     ▪ Want kubectl v1.27.4? Try 'minikube kubectl -- get pods -A'
I0914 09:24:03.293712    9809 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default

* 
* ==> Docker <==
* Sep 14 02:23:45 minikube dockerd[826]: time="2023-09-14T02:23:45.061592801Z" level=info msg="Daemon has completed initialization"
Sep 14 02:23:45 minikube dockerd[826]: time="2023-09-14T02:23:45.105471301Z" level=info msg="API listen on /var/run/docker.sock"
Sep 14 02:23:45 minikube dockerd[826]: time="2023-09-14T02:23:45.105551926Z" level=info msg="API listen on [::]:2376"
Sep 14 02:23:45 minikube systemd[1]: Started Docker Application Container Engine.
Sep 14 02:23:45 minikube systemd[1]: Stopping Docker Application Container Engine...
Sep 14 02:23:45 minikube dockerd[826]: time="2023-09-14T02:23:45.214537384Z" level=info msg="Processing signal 'terminated'"
Sep 14 02:23:45 minikube dockerd[826]: time="2023-09-14T02:23:45.215418217Z" level=info msg="stopping event stream following graceful shutdown" error="<nil>" module=libcontainerd namespace=moby
Sep 14 02:23:45 minikube dockerd[826]: time="2023-09-14T02:23:45.215809967Z" level=info msg="Daemon shutdown complete"
Sep 14 02:23:45 minikube systemd[1]: docker.service: Deactivated successfully.
Sep 14 02:23:45 minikube systemd[1]: Stopped Docker Application Container Engine.
Sep 14 02:23:45 minikube systemd[1]: Starting Docker Application Container Engine...
Sep 14 02:23:45 minikube dockerd[1030]: time="2023-09-14T02:23:45.292767926Z" level=info msg="Starting up"
Sep 14 02:23:45 minikube dockerd[1030]: time="2023-09-14T02:23:45.304744551Z" level=info msg="[graphdriver] trying configured driver: overlay2"
Sep 14 02:23:45 minikube dockerd[1030]: time="2023-09-14T02:23:45.316810676Z" level=info msg="Loading containers: start."
Sep 14 02:23:45 minikube dockerd[1030]: time="2023-09-14T02:23:45.424525301Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Sep 14 02:23:45 minikube dockerd[1030]: time="2023-09-14T02:23:45.468523093Z" level=info msg="Loading containers: done."
Sep 14 02:23:45 minikube dockerd[1030]: time="2023-09-14T02:23:45.480694843Z" level=info msg="Docker daemon" commit=4ffc614 graphdriver=overlay2 version=24.0.4
Sep 14 02:23:45 minikube dockerd[1030]: time="2023-09-14T02:23:45.480744593Z" level=info msg="Daemon has completed initialization"
Sep 14 02:23:45 minikube dockerd[1030]: time="2023-09-14T02:23:45.525584968Z" level=info msg="API listen on /var/run/docker.sock"
Sep 14 02:23:45 minikube dockerd[1030]: time="2023-09-14T02:23:45.525586926Z" level=info msg="API listen on [::]:2376"
Sep 14 02:23:45 minikube systemd[1]: Started Docker Application Container Engine.
Sep 14 02:23:46 minikube systemd[1]: Starting CRI Interface for Docker Application Container Engine...
Sep 14 02:23:46 minikube cri-dockerd[1250]: time="2023-09-14T02:23:46Z" level=info msg="Connecting to docker on the Endpoint unix:///var/run/docker.sock"
Sep 14 02:23:46 minikube cri-dockerd[1250]: time="2023-09-14T02:23:46Z" level=info msg="Start docker client with request timeout 0s"
Sep 14 02:23:46 minikube cri-dockerd[1250]: time="2023-09-14T02:23:46Z" level=info msg="Hairpin mode is set to hairpin-veth"
Sep 14 02:23:46 minikube cri-dockerd[1250]: time="2023-09-14T02:23:46Z" level=info msg="Loaded network plugin cni"
Sep 14 02:23:46 minikube cri-dockerd[1250]: time="2023-09-14T02:23:46Z" level=info msg="Docker cri networking managed by network plugin cni"
Sep 14 02:23:46 minikube cri-dockerd[1250]: time="2023-09-14T02:23:46Z" level=info msg="Docker Info: &{ID:f97e1c65-407c-48a5-ba74-f9bf3cb35afc Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:8 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:[] Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:[] Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6tables:true Debug:false NFd:25 OomKillDisable:false NGoroutines:35 SystemTime:2023-09-14T02:23:46.141280551Z LoggingDriver:json-file CgroupDriver:cgroupfs CgroupVersion:2 NEventsListener:0 KernelVersion:5.15.49-linuxkit OperatingSystem:Ubuntu 22.04.2 LTS OSVersion:22.04 OSType:linux Architecture:aarch64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:0x40001442a0 NCPU:4 MemTotal:8231948288 GenericResources:[] DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy:control-plane.minikube.internal Name:minikube Labels:[provider=docker] ExperimentalBuild:false ServerVersion:24.0.4 ClusterStore: ClusterAdvertise: Runtimes:map[io.containerd.runc.v2:{Path:runc Args:[] Shim:<nil>} runc:{Path:runc Args:[] Shim:<nil>}] DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:[] Nodes:0 Managers:0 Cluster:<nil> Warnings:[]} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:3dce8eb055cbb6872793272b4f20ed16117344f8 Expected:3dce8eb055cbb6872793272b4f20ed16117344f8} RuncCommit:{ID:v1.1.7-0-g860f061 Expected:v1.1.7-0-g860f061} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=builtin name=cgroupns] ProductLicense: DefaultAddressPools:[] Warnings:[]}"
Sep 14 02:23:46 minikube cri-dockerd[1250]: time="2023-09-14T02:23:46Z" level=info msg="Setting cgroupDriver cgroupfs"
Sep 14 02:23:46 minikube cri-dockerd[1250]: time="2023-09-14T02:23:46Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:,},}"
Sep 14 02:23:46 minikube cri-dockerd[1250]: time="2023-09-14T02:23:46Z" level=info msg="Starting the GRPC backend for the Docker CRI interface."
Sep 14 02:23:46 minikube cri-dockerd[1250]: time="2023-09-14T02:23:46Z" level=info msg="Start cri-dockerd grpc backend"
Sep 14 02:23:46 minikube systemd[1]: Started CRI Interface for Docker Application Container Engine.
Sep 14 02:23:53 minikube cri-dockerd[1250]: time="2023-09-14T02:23:53Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/0b33256040a9a8fbe2a86ab40ff12e595f4aa6a3e4dda0bbc715e7cc2ddc524e/resolv.conf as [nameserver 192.168.65.2 options ndots:0]"
Sep 14 02:23:53 minikube cri-dockerd[1250]: time="2023-09-14T02:23:53Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/042510cffe0ae36e8ebbbb97e519dd81950ce73992172ad49cc0c544db4ab54e/resolv.conf as [nameserver 192.168.65.2 options ndots:0]"
Sep 14 02:23:53 minikube cri-dockerd[1250]: time="2023-09-14T02:23:53Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/bcf61caee59bbef5828639e3f8f3a2be592d064572536d5887dff42a76b17579/resolv.conf as [nameserver 192.168.65.2 options ndots:0]"
Sep 14 02:23:53 minikube cri-dockerd[1250]: time="2023-09-14T02:23:53Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/51bd9eceaa9e25830c816ae1b66e3b72149594bc11ae1ebac2ea8efcb7bc03e7/resolv.conf as [nameserver 192.168.65.2 options ndots:0]"
Sep 14 02:24:12 minikube cri-dockerd[1250]: time="2023-09-14T02:24:12Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/89b30c1475d7658c2536cdc21c923448c5b18809a52c8a1dfc590ceebcfb4cce/resolv.conf as [nameserver 192.168.65.2 options ndots:0]"
Sep 14 02:24:13 minikube cri-dockerd[1250]: time="2023-09-14T02:24:13Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/1e083573c02c9fd47b7c98865b75de2fe40a3ecfdf09d13fc6816976a2faa4f0/resolv.conf as [nameserver 192.168.65.2 options ndots:0]"
Sep 14 02:24:13 minikube cri-dockerd[1250]: time="2023-09-14T02:24:13Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/42b9ab56da31896f4d946a25db79b7880c2a1a311bca0e1efaf2882c6ff3f71e/resolv.conf as [nameserver 192.168.65.2 options ndots:0]"
Sep 14 02:24:19 minikube cri-dockerd[1250]: time="2023-09-14T02:24:19Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:10.244.0.0/24,},}"
Sep 14 02:24:43 minikube dockerd[1030]: time="2023-09-14T02:24:43.025438050Z" level=info msg="ignoring event" container=7b7fc8431a5bf28f2ae6f86897ea7b1be57df3a862e176c64e849ed1d133ce46 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Sep 14 02:25:15 minikube cri-dockerd[1250]: time="2023-09-14T02:25:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/e56b07fda109ee74d0ad98f240eb404ce4f9299bbaeb13107df041c6f5acb468/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Sep 14 02:25:15 minikube cri-dockerd[1250]: time="2023-09-14T02:25:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/92c629ee82711c78390e8e8a6c7707aec5333b3a436c20ee3ced04233e442259/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Sep 14 02:25:20 minikube dockerd[1030]: time="2023-09-14T02:25:20.920306887Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Sep 14 02:25:20 minikube dockerd[1030]: time="2023-09-14T02:25:20.920358220Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Sep 14 02:25:25 minikube dockerd[1030]: time="2023-09-14T02:25:25.947536458Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Sep 14 02:25:25 minikube dockerd[1030]: time="2023-09-14T02:25:25.947680583Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Sep 14 02:25:37 minikube dockerd[1030]: time="2023-09-14T02:25:37.816016339Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Sep 14 02:25:37 minikube dockerd[1030]: time="2023-09-14T02:25:37.816109964Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Sep 14 02:25:42 minikube dockerd[1030]: time="2023-09-14T02:25:42.460912841Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Sep 14 02:25:42 minikube dockerd[1030]: time="2023-09-14T02:25:42.460969841Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Sep 14 02:26:07 minikube dockerd[1030]: time="2023-09-14T02:26:07.922518422Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Sep 14 02:26:07 minikube dockerd[1030]: time="2023-09-14T02:26:07.922576297Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Sep 14 02:26:12 minikube dockerd[1030]: time="2023-09-14T02:26:12.121000216Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Sep 14 02:26:12 minikube dockerd[1030]: time="2023-09-14T02:26:12.121172216Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Sep 14 02:26:53 minikube dockerd[1030]: time="2023-09-14T02:26:53.192655096Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Sep 14 02:26:53 minikube dockerd[1030]: time="2023-09-14T02:26:53.192858513Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Sep 14 02:27:08 minikube dockerd[1030]: time="2023-09-14T02:27:08.334705006Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Sep 14 02:27:08 minikube dockerd[1030]: time="2023-09-14T02:27:08.334756672Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"

* 
* ==> container status <==
* CONTAINER           IMAGE               CREATED             STATE               NAME                      ATTEMPT             POD ID              POD
f5a854a7129ae       ba04bb24b9575       2 minutes ago       Running             storage-provisioner       1                   89b30c1475d76       storage-provisioner
24f1068d30b97       97e04611ad434       3 minutes ago       Running             coredns                   0                   42b9ab56da318       coredns-5d78c9869d-xws9t
78aa7e7514530       532e5a30e948f       3 minutes ago       Running             kube-proxy                0                   1e083573c02c9       kube-proxy-zrth7
7b7fc8431a5bf       ba04bb24b9575       3 minutes ago       Exited              storage-provisioner       0                   89b30c1475d76       storage-provisioner
83d453ff57b1e       64aece92d6bde       3 minutes ago       Running             kube-apiserver            0                   51bd9eceaa9e2       kube-apiserver-minikube
437c690a25258       389f6f052cf83       3 minutes ago       Running             kube-controller-manager   0                   bcf61caee59bb       kube-controller-manager-minikube
cdda00c0dcb0e       6eb63895cb67f       3 minutes ago       Running             kube-scheduler            0                   042510cffe0ae       kube-scheduler-minikube
2d5769c451de8       24bc64e911039       3 minutes ago       Running             etcd                      0                   0b33256040a9a       etcd-minikube

* 
* ==> coredns [24f1068d30b9] <==
* [INFO] plugin/ready: Still waiting on: "kubernetes"
.:53
[INFO] plugin/reload: Running configuration SHA512 = 8846d9ca81164c00fa03e78dfcf1a6846552cc49335bc010218794b8cfaf537759aa4b596e7dc20c0f618e8eb07603c0139662b99dfa3de45b176fbe7fb57ce1
CoreDNS-1.10.1
linux/arm64, go1.20, 055b2c3
[INFO] 127.0.0.1:48268 - 41936 "HINFO IN 3161901828720060589.4613864015319491455. udp 57 false 512" NXDOMAIN qr,rd,ra 57 0.16650375s

* 
* ==> describe nodes <==
* Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=arm64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=arm64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=fd7ecd9c4599bef9f04c0986c4a0187f98a4396e
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2023_09_14T09_23_59_0700
                    minikube.k8s.io/version=v1.31.2
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Thu, 14 Sep 2023 02:23:56 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Thu, 14 Sep 2023 02:27:12 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Thu, 14 Sep 2023 02:24:19 +0000   Thu, 14 Sep 2023 02:23:54 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Thu, 14 Sep 2023 02:24:19 +0000   Thu, 14 Sep 2023 02:23:54 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Thu, 14 Sep 2023 02:24:19 +0000   Thu, 14 Sep 2023 02:23:54 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Thu, 14 Sep 2023 02:24:19 +0000   Thu, 14 Sep 2023 02:24:09 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                4
  ephemeral-storage:  61202244Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  hugepages-32Mi:     0
  hugepages-64Ki:     0
  memory:             8039012Ki
  pods:               110
Allocatable:
  cpu:                4
  ephemeral-storage:  61202244Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  hugepages-32Mi:     0
  hugepages-64Ki:     0
  memory:             8039012Ki
  pods:               110
System Info:
  Machine ID:                 518365a0f266409aafc656f5bc5244be
  System UUID:                518365a0f266409aafc656f5bc5244be
  Boot ID:                    6453d183-461f-4e80-803b-bdef32422508
  Kernel Version:             5.15.49-linuxkit
  OS Image:                   Ubuntu 22.04.2 LTS
  Operating System:           linux
  Architecture:               arm64
  Container Runtime Version:  docker://24.0.4
  Kubelet Version:            v1.27.4
  Kube-Proxy Version:         v1.27.4
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (9 in total)
  Namespace                   Name                                      CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                      ------------  ----------  ---------------  -------------  ---
  default                     my-web-app-deployment-77b46d9c46-5bvhq    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         118s
  default                     my-web-app-deployment-77b46d9c46-jvvgp    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         118s
  kube-system                 coredns-5d78c9869d-xws9t                  100m (2%!)(MISSING)     0 (0%!)(MISSING)      70Mi (0%!)(MISSING)        170Mi (2%!)(MISSING)     3m1s
  kube-system                 etcd-minikube                             100m (2%!)(MISSING)     0 (0%!)(MISSING)      100Mi (1%!)(MISSING)       0 (0%!)(MISSING)         3m14s
  kube-system                 kube-apiserver-minikube                   250m (6%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         3m14s
  kube-system                 kube-controller-manager-minikube          200m (5%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         3m14s
  kube-system                 kube-proxy-zrth7                          0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         3m1s
  kube-system                 kube-scheduler-minikube                   100m (2%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         3m14s
  kube-system                 storage-provisioner                       0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         3m10s
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (18%!)(MISSING)  0 (0%!)(MISSING)
  memory             170Mi (2%!)(MISSING)  170Mi (2%!)(MISSING)
  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-32Mi     0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-64Ki     0 (0%!)(MISSING)      0 (0%!)(MISSING)
Events:
  Type    Reason                   Age    From             Message
  ----    ------                   ----   ----             -------
  Normal  Starting                 3m     kube-proxy       
  Normal  Starting                 3m14s  kubelet          Starting kubelet.
  Normal  NodeHasSufficientMemory  3m14s  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    3m14s  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     3m14s  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeNotReady             3m14s  kubelet          Node minikube status is now: NodeNotReady
  Normal  NodeAllocatableEnforced  3m14s  kubelet          Updated Node Allocatable limit across pods
  Normal  NodeReady                3m4s   kubelet          Node minikube status is now: NodeReady
  Normal  RegisteredNode           3m2s   node-controller  Node minikube event: Registered Node minikube in Controller

* 
* ==> dmesg <==
* [Sep14 02:11] armv8-pmu pmu: hw perfevents: failed to probe PMU!
[  +0.094200] cacheinfo: Unable to detect cache hierarchy for CPU 0
[  +0.020677] the cryptoloop driver has been deprecated and will be removed in in Linux 5.16
[  +0.023054] device-mapper: core: CONFIG_IMA_DISABLE_HTABLE is disabled. Duplicate IMA measurements will not be recorded in the IMA log.
[  +8.210608] grpcfuse: loading out-of-tree module taints kernel.
[Sep14 02:23] hrtimer: interrupt took 3171750 ns

* 
* ==> etcd [2d5769c451de] <==
* {"level":"warn","ts":"2023-09-14T02:23:53.759Z","caller":"flags/flag.go:93","msg":"unrecognized environment variable","environment-variable":"ETCD_UNSUPPORTED_ARCH=arm64"}
{"level":"info","ts":"2023-09-14T02:23:53.759Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"info","ts":"2023-09-14T02:23:53.760Z","caller":"embed/etcd.go:124","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2023-09-14T02:23:53.760Z","caller":"embed/etcd.go:484","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-09-14T02:23:53.761Z","caller":"embed/etcd.go:132","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2023-09-14T02:23:53.761Z","caller":"embed/etcd.go:306","msg":"starting an etcd server","etcd-version":"3.5.7","git-sha":"215b53cf3","go-version":"go1.17.13","go-os":"linux","go-arch":"arm64","max-cpu-set":4,"max-cpu-available":4,"member-initialized":false,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"minikube=https://192.168.49.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2023-09-14T02:23:53.764Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"2.775375ms"}
{"level":"info","ts":"2023-09-14T02:23:53.821Z","caller":"etcdserver/raft.go:494","msg":"starting local member","local-member-id":"aec36adc501070cc","cluster-id":"fa54960ea34d58be"}
{"level":"info","ts":"2023-09-14T02:23:53.821Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2023-09-14T02:23:53.822Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 0"}
{"level":"info","ts":"2023-09-14T02:23:53.822Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2023-09-14T02:23:53.822Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 1"}
{"level":"info","ts":"2023-09-14T02:23:53.822Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"warn","ts":"2023-09-14T02:23:53.825Z","caller":"auth/store.go:1234","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2023-09-14T02:23:53.828Z","caller":"mvcc/kvstore.go:393","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2023-09-14T02:23:53.830Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2023-09-14T02:23:53.831Z","caller":"etcdserver/server.go:854","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.7","cluster-version":"to_be_decided"}
{"level":"info","ts":"2023-09-14T02:23:53.832Z","caller":"etcdserver/server.go:738","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2023-09-14T02:23:53.833Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2023-09-14T02:23:53.833Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2023-09-14T02:23:53.833Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2023-09-14T02:23:53.835Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2023-09-14T02:23:53.835Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2023-09-14T02:23:53.846Z","caller":"embed/etcd.go:687","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-09-14T02:23:53.846Z","caller":"embed/etcd.go:275","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2023-09-14T02:23:53.846Z","caller":"embed/etcd.go:762","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2023-09-14T02:23:53.846Z","caller":"embed/etcd.go:586","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2023-09-14T02:23:53.846Z","caller":"embed/etcd.go:558","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2023-09-14T02:23:54.022Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2023-09-14T02:23:54.022Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2023-09-14T02:23:54.022Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2023-09-14T02:23:54.022Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2023-09-14T02:23:54.022Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2023-09-14T02:23:54.022Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2023-09-14T02:23:54.022Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2023-09-14T02:23:54.026Z","caller":"etcdserver/server.go:2571","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2023-09-14T02:23:54.027Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2023-09-14T02:23:54.027Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2023-09-14T02:23:54.027Z","caller":"etcdserver/server.go:2595","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2023-09-14T02:23:54.027Z","caller":"etcdserver/server.go:2062","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2023-09-14T02:23:54.027Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-09-14T02:23:54.030Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-09-14T02:23:54.030Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"192.168.49.2:2379"}
{"level":"info","ts":"2023-09-14T02:23:54.031Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"127.0.0.1:2379"}
{"level":"info","ts":"2023-09-14T02:23:54.032Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2023-09-14T02:23:54.032Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}

* 
* ==> kernel <==
*  02:27:13 up 15 min,  0 users,  load average: 0.31, 0.82, 0.57
Linux minikube 5.15.49-linuxkit #1 SMP PREEMPT Tue Sep 13 07:51:32 UTC 2022 aarch64 aarch64 aarch64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.2 LTS"

* 
* ==> kube-apiserver [83d453ff57b1] <==
* I0914 02:23:56.113924       1 system_namespaces_controller.go:67] Starting system namespaces controller
I0914 02:23:56.114069       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0914 02:23:56.114270       1 controller.go:85] Starting OpenAPI controller
I0914 02:23:56.114345       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0914 02:23:56.114374       1 shared_informer.go:311] Waiting for caches to sync for cluster_authentication_trust_controller
I0914 02:23:56.114531       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0914 02:23:56.114552       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0914 02:23:56.114687       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0914 02:23:56.114909       1 apf_controller.go:361] Starting API Priority and Fairness config controller
I0914 02:23:56.115023       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0914 02:23:56.115220       1 aggregator.go:150] waiting for initial CRD sync...
I0914 02:23:56.115279       1 handler_discovery.go:392] Starting ResourceDiscoveryManager
I0914 02:23:56.114069       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0914 02:23:56.115724       1 available_controller.go:423] Starting AvailableConditionController
I0914 02:23:56.115740       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0914 02:23:56.115752       1 controller.go:83] Starting OpenAPI AggregationController
I0914 02:23:56.115921       1 controller.go:121] Starting legacy_token_tracking_controller
I0914 02:23:56.115939       1 shared_informer.go:311] Waiting for caches to sync for configmaps
I0914 02:23:56.115965       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0914 02:23:56.116103       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0914 02:23:56.116970       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0914 02:23:56.117255       1 shared_informer.go:311] Waiting for caches to sync for crd-autoregister
I0914 02:23:56.117728       1 customresource_discovery_controller.go:289] Starting DiscoveryController
I0914 02:23:56.118190       1 controller.go:85] Starting OpenAPI V3 controller
I0914 02:23:56.118259       1 naming_controller.go:291] Starting NamingConditionController
I0914 02:23:56.118330       1 establishing_controller.go:76] Starting EstablishingController
I0914 02:23:56.118361       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0914 02:23:56.118378       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0914 02:23:56.118389       1 crd_finalizer.go:266] Starting CRDFinalizer
I0914 02:23:56.229507       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller
I0914 02:23:56.230701       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0914 02:23:56.230810       1 apf_controller.go:366] Running API Priority and Fairness config worker
I0914 02:23:56.230872       1 apf_controller.go:369] Running API Priority and Fairness periodic rebalancing process
I0914 02:23:56.231019       1 shared_informer.go:318] Caches are synced for configmaps
I0914 02:23:56.231232       1 shared_informer.go:318] Caches are synced for crd-autoregister
I0914 02:23:56.232832       1 aggregator.go:152] initial CRD sync complete...
I0914 02:23:56.232943       1 autoregister_controller.go:141] Starting autoregister controller
I0914 02:23:56.233022       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0914 02:23:56.233056       1 cache.go:39] Caches are synced for autoregister controller
I0914 02:23:56.242001       1 shared_informer.go:318] Caches are synced for node_authorizer
I0914 02:23:56.254888       1 controller.go:624] quota admission added evaluator for: namespaces
I0914 02:23:56.255657       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0914 02:23:56.325083       1 controller.go:624] quota admission added evaluator for: leases.coordination.k8s.io
I0914 02:23:56.851742       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I0914 02:23:57.119010       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0914 02:23:57.123035       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0914 02:23:57.123066       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0914 02:23:57.474613       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0914 02:23:57.500529       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0914 02:23:57.557799       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs=map[IPv4:10.96.0.1]
W0914 02:23:57.562678       1 lease.go:251] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0914 02:23:57.563325       1 controller.go:624] quota admission added evaluator for: endpoints
I0914 02:23:57.567630       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0914 02:23:58.185420       1 controller.go:624] quota admission added evaluator for: serviceaccounts
I0914 02:23:59.041839       1 controller.go:624] quota admission added evaluator for: deployments.apps
I0914 02:23:59.076812       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs=map[IPv4:10.96.0.10]
I0914 02:23:59.110082       1 controller.go:624] quota admission added evaluator for: daemonsets.apps
I0914 02:24:12.422672       1 controller.go:624] quota admission added evaluator for: replicasets.apps
I0914 02:24:12.572374       1 controller.go:624] quota admission added evaluator for: controllerrevisions.apps
I0914 02:25:15.298900       1 alloc.go:330] "allocated clusterIPs" service="default/my-web-app-service" clusterIPs=map[IPv4:10.97.98.227]

* 
* ==> kube-controller-manager [437c690a2525] <==
* I0914 02:24:11.669614       1 shared_informer.go:311] Waiting for caches to sync for crt configmap
I0914 02:24:11.673351       1 shared_informer.go:311] Waiting for caches to sync for resource quota
I0914 02:24:11.686737       1 actual_state_of_world.go:547] "Failed to update statusUpdateNeeded field in actual state of world" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"minikube\" does not exist"
I0914 02:24:11.695799       1 shared_informer.go:318] Caches are synced for cronjob
I0914 02:24:11.697791       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I0914 02:24:11.699695       1 shared_informer.go:318] Caches are synced for ClusterRoleAggregator
I0914 02:24:11.718732       1 shared_informer.go:318] Caches are synced for bootstrap_signer
I0914 02:24:11.719344       1 shared_informer.go:318] Caches are synced for service account
I0914 02:24:11.719414       1 shared_informer.go:318] Caches are synced for TTL
I0914 02:24:11.732013       1 shared_informer.go:318] Caches are synced for resource quota
I0914 02:24:11.736821       1 shared_informer.go:318] Caches are synced for node
I0914 02:24:11.736902       1 range_allocator.go:174] "Sending events to api server"
I0914 02:24:11.736931       1 range_allocator.go:178] "Starting range CIDR allocator"
I0914 02:24:11.736950       1 shared_informer.go:311] Waiting for caches to sync for cidrallocator
I0914 02:24:11.736956       1 shared_informer.go:318] Caches are synced for cidrallocator
I0914 02:24:11.742724       1 range_allocator.go:380] "Set node PodCIDR" node="minikube" podCIDRs=[10.244.0.0/24]
I0914 02:24:11.747080       1 shared_informer.go:318] Caches are synced for GC
I0914 02:24:11.753425       1 shared_informer.go:318] Caches are synced for deployment
I0914 02:24:11.759728       1 shared_informer.go:318] Caches are synced for ReplicaSet
I0914 02:24:11.769549       1 shared_informer.go:318] Caches are synced for TTL after finished
I0914 02:24:11.769732       1 shared_informer.go:318] Caches are synced for endpoint_slice_mirroring
I0914 02:24:11.769820       1 shared_informer.go:318] Caches are synced for ReplicationController
I0914 02:24:11.769832       1 shared_informer.go:318] Caches are synced for crt configmap
I0914 02:24:11.770990       1 shared_informer.go:318] Caches are synced for endpoint_slice
I0914 02:24:11.771035       1 shared_informer.go:318] Caches are synced for stateful set
I0914 02:24:11.771125       1 shared_informer.go:318] Caches are synced for daemon sets
I0914 02:24:11.773469       1 shared_informer.go:318] Caches are synced for ephemeral
I0914 02:24:11.773668       1 shared_informer.go:318] Caches are synced for resource quota
I0914 02:24:11.787425       1 shared_informer.go:318] Caches are synced for namespace
I0914 02:24:11.788974       1 shared_informer.go:318] Caches are synced for taint
I0914 02:24:11.789128       1 node_lifecycle_controller.go:1223] "Initializing eviction metric for zone" zone=""
I0914 02:24:11.789222       1 node_lifecycle_controller.go:875] "Missing timestamp for Node. Assuming now as a timestamp" node="minikube"
I0914 02:24:11.789259       1 node_lifecycle_controller.go:1069] "Controller detected that zone is now in new state" zone="" newState=Normal
I0914 02:24:11.789345       1 taint_manager.go:206] "Starting NoExecuteTaintManager"
I0914 02:24:11.789370       1 taint_manager.go:211] "Sending events to api server"
I0914 02:24:11.790136       1 event.go:307] "Event occurred" object="minikube" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node minikube event: Registered Node minikube in Controller"
I0914 02:24:11.805133       1 shared_informer.go:318] Caches are synced for job
I0914 02:24:11.812755       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-legacy-unknown
I0914 02:24:11.812836       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-serving
I0914 02:24:11.812854       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-client
I0914 02:24:11.812964       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0914 02:24:11.818199       1 shared_informer.go:318] Caches are synced for HPA
I0914 02:24:11.819451       1 shared_informer.go:318] Caches are synced for disruption
I0914 02:24:11.819521       1 shared_informer.go:318] Caches are synced for PVC protection
I0914 02:24:11.820796       1 shared_informer.go:318] Caches are synced for endpoint
I0914 02:24:11.828383       1 shared_informer.go:318] Caches are synced for PV protection
I0914 02:24:11.861626       1 shared_informer.go:318] Caches are synced for certificate-csrapproving
I0914 02:24:11.870761       1 shared_informer.go:318] Caches are synced for persistent volume
I0914 02:24:11.895970       1 shared_informer.go:318] Caches are synced for attach detach
I0914 02:24:11.899411       1 shared_informer.go:318] Caches are synced for expand
I0914 02:24:12.298162       1 shared_informer.go:318] Caches are synced for garbage collector
I0914 02:24:12.319535       1 shared_informer.go:318] Caches are synced for garbage collector
I0914 02:24:12.319687       1 garbagecollector.go:166] "All resource monitors have synced. Proceeding to collect garbage"
I0914 02:24:12.427995       1 event.go:307] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-5d78c9869d to 1"
I0914 02:24:12.581203       1 event.go:307] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-zrth7"
I0914 02:24:12.776371       1 event.go:307] "Event occurred" object="kube-system/coredns-5d78c9869d" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-5d78c9869d-xws9t"
I0914 02:25:15.273932       1 event.go:307] "Event occurred" object="default/my-web-app-deployment" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set my-web-app-deployment-77b46d9c46 to 2"
I0914 02:25:15.297460       1 event.go:307] "Event occurred" object="default/my-web-app-deployment-77b46d9c46" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: my-web-app-deployment-77b46d9c46-jvvgp"
W0914 02:25:15.338902       1 endpointslice_controller.go:297] Error syncing endpoint slices for service "default/my-web-app-service", retrying. Error: EndpointSlice informer cache is out of date
I0914 02:25:15.340203       1 event.go:307] "Event occurred" object="default/my-web-app-deployment-77b46d9c46" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: my-web-app-deployment-77b46d9c46-5bvhq"

* 
* ==> kube-proxy [78aa7e751453] <==
* I0914 02:24:13.301562       1 node.go:141] Successfully retrieved node IP: 192.168.49.2
I0914 02:24:13.301744       1 server_others.go:110] "Detected node IP" address="192.168.49.2"
I0914 02:24:13.301775       1 server_others.go:554] "Using iptables proxy"
I0914 02:24:13.360299       1 server_others.go:192] "Using iptables Proxier"
I0914 02:24:13.360333       1 server_others.go:199] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0914 02:24:13.360339       1 server_others.go:200] "Creating dualStackProxier for iptables"
I0914 02:24:13.360349       1 server_others.go:484] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, defaulting to no-op detect-local for IPv6"
I0914 02:24:13.360478       1 proxier.go:253] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0914 02:24:13.361235       1 server.go:658] "Version info" version="v1.27.4"
I0914 02:24:13.361250       1 server.go:660] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0914 02:24:13.362393       1 config.go:188] "Starting service config controller"
I0914 02:24:13.362468       1 shared_informer.go:311] Waiting for caches to sync for service config
I0914 02:24:13.362520       1 config.go:97] "Starting endpoint slice config controller"
I0914 02:24:13.362528       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I0914 02:24:13.363284       1 config.go:315] "Starting node config controller"
I0914 02:24:13.363296       1 shared_informer.go:311] Waiting for caches to sync for node config
I0914 02:24:13.463556       1 shared_informer.go:318] Caches are synced for node config
I0914 02:24:13.463763       1 shared_informer.go:318] Caches are synced for service config
I0914 02:24:13.463783       1 shared_informer.go:318] Caches are synced for endpoint slice config

* 
* ==> kube-scheduler [cdda00c0dcb0] <==
* I0914 02:23:54.753890       1 serving.go:348] Generated self-signed cert in-memory
W0914 02:23:56.172003       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0914 02:23:56.174528       1 authentication.go:368] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0914 02:23:56.174886       1 authentication.go:369] Continuing without authentication configuration. This may treat all requests as anonymous.
W0914 02:23:56.175060       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0914 02:23:56.256457       1 server.go:154] "Starting Kubernetes Scheduler" version="v1.27.4"
I0914 02:23:56.256488       1 server.go:156] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0914 02:23:56.258795       1 secure_serving.go:210] Serving securely on 127.0.0.1:10259
I0914 02:23:56.261299       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0914 02:23:56.261370       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0914 02:23:56.261407       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W0914 02:23:56.264757       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0914 02:23:56.264868       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0914 02:23:56.265546       1 reflector.go:533] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0914 02:23:56.265795       1 reflector.go:148] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0914 02:23:56.265917       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0914 02:23:56.266430       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0914 02:23:56.271747       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0914 02:23:56.271836       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0914 02:23:56.272190       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0914 02:23:56.272341       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0914 02:23:56.272429       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0914 02:23:56.272539       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0914 02:23:56.272686       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0914 02:23:56.272765       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0914 02:23:56.272837       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0914 02:23:56.272857       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0914 02:23:56.272893       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0914 02:23:56.272899       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0914 02:23:56.272949       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0914 02:23:56.272983       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0914 02:23:56.273032       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0914 02:23:56.273040       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0914 02:23:56.273062       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0914 02:23:56.273081       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0914 02:23:56.273116       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0914 02:23:56.273133       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0914 02:23:56.273153       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0914 02:23:56.273158       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0914 02:23:56.273232       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0914 02:23:56.273257       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0914 02:23:57.129310       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0914 02:23:57.129365       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0914 02:23:57.132536       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0914 02:23:57.132638       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0914 02:23:57.226818       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0914 02:23:57.227000       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0914 02:23:57.285721       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0914 02:23:57.285753       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0914 02:23:57.339877       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0914 02:23:57.339909       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
I0914 02:23:57.861448       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file

* 
* ==> kubelet <==
* Sep 14 02:24:12 minikube kubelet[2297]: I0914 02:24:12.585847    2297 topology_manager.go:212] "Topology Admit Handler"
Sep 14 02:24:12 minikube kubelet[2297]: I0914 02:24:12.675150    2297 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"lib-modules\" (UniqueName: \"kubernetes.io/host-path/f00d035c-c54c-4ec9-8160-e14d1ab03c5e-lib-modules\") pod \"kube-proxy-zrth7\" (UID: \"f00d035c-c54c-4ec9-8160-e14d1ab03c5e\") " pod="kube-system/kube-proxy-zrth7"
Sep 14 02:24:12 minikube kubelet[2297]: I0914 02:24:12.675238    2297 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-proxy\" (UniqueName: \"kubernetes.io/configmap/f00d035c-c54c-4ec9-8160-e14d1ab03c5e-kube-proxy\") pod \"kube-proxy-zrth7\" (UID: \"f00d035c-c54c-4ec9-8160-e14d1ab03c5e\") " pod="kube-system/kube-proxy-zrth7"
Sep 14 02:24:12 minikube kubelet[2297]: I0914 02:24:12.675265    2297 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-v8nxk\" (UniqueName: \"kubernetes.io/projected/f00d035c-c54c-4ec9-8160-e14d1ab03c5e-kube-api-access-v8nxk\") pod \"kube-proxy-zrth7\" (UID: \"f00d035c-c54c-4ec9-8160-e14d1ab03c5e\") " pod="kube-system/kube-proxy-zrth7"
Sep 14 02:24:12 minikube kubelet[2297]: I0914 02:24:12.675293    2297 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"xtables-lock\" (UniqueName: \"kubernetes.io/host-path/f00d035c-c54c-4ec9-8160-e14d1ab03c5e-xtables-lock\") pod \"kube-proxy-zrth7\" (UID: \"f00d035c-c54c-4ec9-8160-e14d1ab03c5e\") " pod="kube-system/kube-proxy-zrth7"
Sep 14 02:24:12 minikube kubelet[2297]: I0914 02:24:12.783357    2297 topology_manager.go:212] "Topology Admit Handler"
Sep 14 02:24:12 minikube kubelet[2297]: I0914 02:24:12.877563    2297 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-wn4mb\" (UniqueName: \"kubernetes.io/projected/2d9dbd38-ebe7-4f84-b0d2-509638b61813-kube-api-access-wn4mb\") pod \"coredns-5d78c9869d-xws9t\" (UID: \"2d9dbd38-ebe7-4f84-b0d2-509638b61813\") " pod="kube-system/coredns-5d78c9869d-xws9t"
Sep 14 02:24:12 minikube kubelet[2297]: I0914 02:24:12.877695    2297 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/2d9dbd38-ebe7-4f84-b0d2-509638b61813-config-volume\") pod \"coredns-5d78c9869d-xws9t\" (UID: \"2d9dbd38-ebe7-4f84-b0d2-509638b61813\") " pod="kube-system/coredns-5d78c9869d-xws9t"
Sep 14 02:24:13 minikube kubelet[2297]: I0914 02:24:13.673944    2297 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/kube-proxy-zrth7" podStartSLOduration=1.6738607170000002 podCreationTimestamp="2023-09-14 02:24:12 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-09-14 02:24:13.67374305 +0000 UTC m=+14.656899967" watchObservedRunningTime="2023-09-14 02:24:13.673860717 +0000 UTC m=+14.657017675"
Sep 14 02:24:13 minikube kubelet[2297]: I0914 02:24:13.695981    2297 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/storage-provisioner" podStartSLOduration=10.695948342 podCreationTimestamp="2023-09-14 02:24:03 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-09-14 02:24:13.687545383 +0000 UTC m=+14.670702383" watchObservedRunningTime="2023-09-14 02:24:13.695948342 +0000 UTC m=+14.679105217"
Sep 14 02:24:14 minikube kubelet[2297]: I0914 02:24:14.703996    2297 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/coredns-5d78c9869d-xws9t" podStartSLOduration=2.703944259 podCreationTimestamp="2023-09-14 02:24:12 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-09-14 02:24:13.697147883 +0000 UTC m=+14.680304800" watchObservedRunningTime="2023-09-14 02:24:14.703944259 +0000 UTC m=+15.687101217"
Sep 14 02:24:19 minikube kubelet[2297]: I0914 02:24:19.988199    2297 kuberuntime_manager.go:1460] "Updating runtime config through cri with podcidr" CIDR="10.244.0.0/24"
Sep 14 02:24:19 minikube kubelet[2297]: I0914 02:24:19.989285    2297 kubelet_network.go:61] "Updating Pod CIDR" originalPodCIDR="" newPodCIDR="10.244.0.0/24"
Sep 14 02:24:43 minikube kubelet[2297]: I0914 02:24:43.887962    2297 scope.go:115] "RemoveContainer" containerID="7b7fc8431a5bf28f2ae6f86897ea7b1be57df3a862e176c64e849ed1d133ce46"
Sep 14 02:25:15 minikube kubelet[2297]: I0914 02:25:15.339229    2297 topology_manager.go:212] "Topology Admit Handler"
Sep 14 02:25:15 minikube kubelet[2297]: I0914 02:25:15.365400    2297 topology_manager.go:212] "Topology Admit Handler"
Sep 14 02:25:15 minikube kubelet[2297]: I0914 02:25:15.522493    2297 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-8bgxq\" (UniqueName: \"kubernetes.io/projected/e3d1d1a8-0ebb-483a-8ff0-1bc63331254e-kube-api-access-8bgxq\") pod \"my-web-app-deployment-77b46d9c46-jvvgp\" (UID: \"e3d1d1a8-0ebb-483a-8ff0-1bc63331254e\") " pod="default/my-web-app-deployment-77b46d9c46-jvvgp"
Sep 14 02:25:15 minikube kubelet[2297]: I0914 02:25:15.522670    2297 reconciler_common.go:258] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-9vj4m\" (UniqueName: \"kubernetes.io/projected/44b15010-38a1-4cb3-9aeb-d461f4180c50-kube-api-access-9vj4m\") pod \"my-web-app-deployment-77b46d9c46-5bvhq\" (UID: \"44b15010-38a1-4cb3-9aeb-d461f4180c50\") " pod="default/my-web-app-deployment-77b46d9c46-5bvhq"
Sep 14 02:25:20 minikube kubelet[2297]: E0914 02:25:20.923023    2297 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:25:20 minikube kubelet[2297]: E0914 02:25:20.923092    2297 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:25:20 minikube kubelet[2297]: E0914 02:25:20.923238    2297 kuberuntime_manager.go:1212] container &Container{Name:my-web-app-container,Image:my-web-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8080,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9vj4m,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod my-web-app-deployment-77b46d9c46-5bvhq_default(44b15010-38a1-4cb3-9aeb-d461f4180c50): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Sep 14 02:25:20 minikube kubelet[2297]: E0914 02:25:20.923285    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/my-web-app-deployment-77b46d9c46-5bvhq" podUID=44b15010-38a1-4cb3-9aeb-d461f4180c50
Sep 14 02:25:21 minikube kubelet[2297]: E0914 02:25:21.217058    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ImagePullBackOff: \"Back-off pulling image \\\"my-web-app:latest\\\"\"" pod="default/my-web-app-deployment-77b46d9c46-5bvhq" podUID=44b15010-38a1-4cb3-9aeb-d461f4180c50
Sep 14 02:25:25 minikube kubelet[2297]: E0914 02:25:25.951313    2297 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:25:25 minikube kubelet[2297]: E0914 02:25:25.951356    2297 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:25:25 minikube kubelet[2297]: E0914 02:25:25.951429    2297 kuberuntime_manager.go:1212] container &Container{Name:my-web-app-container,Image:my-web-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8080,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8bgxq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod my-web-app-deployment-77b46d9c46-jvvgp_default(e3d1d1a8-0ebb-483a-8ff0-1bc63331254e): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Sep 14 02:25:25 minikube kubelet[2297]: E0914 02:25:25.951459    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/my-web-app-deployment-77b46d9c46-jvvgp" podUID=e3d1d1a8-0ebb-483a-8ff0-1bc63331254e
Sep 14 02:25:26 minikube kubelet[2297]: E0914 02:25:26.239982    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ImagePullBackOff: \"Back-off pulling image \\\"my-web-app:latest\\\"\"" pod="default/my-web-app-deployment-77b46d9c46-jvvgp" podUID=e3d1d1a8-0ebb-483a-8ff0-1bc63331254e
Sep 14 02:25:37 minikube kubelet[2297]: E0914 02:25:37.821565    2297 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:25:37 minikube kubelet[2297]: E0914 02:25:37.821981    2297 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:25:37 minikube kubelet[2297]: E0914 02:25:37.822652    2297 kuberuntime_manager.go:1212] container &Container{Name:my-web-app-container,Image:my-web-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8080,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9vj4m,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod my-web-app-deployment-77b46d9c46-5bvhq_default(44b15010-38a1-4cb3-9aeb-d461f4180c50): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Sep 14 02:25:37 minikube kubelet[2297]: E0914 02:25:37.822794    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/my-web-app-deployment-77b46d9c46-5bvhq" podUID=44b15010-38a1-4cb3-9aeb-d461f4180c50
Sep 14 02:25:42 minikube kubelet[2297]: E0914 02:25:42.463419    2297 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:25:42 minikube kubelet[2297]: E0914 02:25:42.463475    2297 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:25:42 minikube kubelet[2297]: E0914 02:25:42.463565    2297 kuberuntime_manager.go:1212] container &Container{Name:my-web-app-container,Image:my-web-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8080,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8bgxq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod my-web-app-deployment-77b46d9c46-jvvgp_default(e3d1d1a8-0ebb-483a-8ff0-1bc63331254e): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Sep 14 02:25:42 minikube kubelet[2297]: E0914 02:25:42.463646    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/my-web-app-deployment-77b46d9c46-jvvgp" podUID=e3d1d1a8-0ebb-483a-8ff0-1bc63331254e
Sep 14 02:25:51 minikube kubelet[2297]: E0914 02:25:51.342314    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ImagePullBackOff: \"Back-off pulling image \\\"my-web-app:latest\\\"\"" pod="default/my-web-app-deployment-77b46d9c46-5bvhq" podUID=44b15010-38a1-4cb3-9aeb-d461f4180c50
Sep 14 02:25:54 minikube kubelet[2297]: E0914 02:25:54.341567    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ImagePullBackOff: \"Back-off pulling image \\\"my-web-app:latest\\\"\"" pod="default/my-web-app-deployment-77b46d9c46-jvvgp" podUID=e3d1d1a8-0ebb-483a-8ff0-1bc63331254e
Sep 14 02:26:07 minikube kubelet[2297]: E0914 02:26:07.925124    2297 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:26:07 minikube kubelet[2297]: E0914 02:26:07.925200    2297 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:26:07 minikube kubelet[2297]: E0914 02:26:07.925426    2297 kuberuntime_manager.go:1212] container &Container{Name:my-web-app-container,Image:my-web-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8080,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9vj4m,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod my-web-app-deployment-77b46d9c46-5bvhq_default(44b15010-38a1-4cb3-9aeb-d461f4180c50): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Sep 14 02:26:07 minikube kubelet[2297]: E0914 02:26:07.925478    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/my-web-app-deployment-77b46d9c46-5bvhq" podUID=44b15010-38a1-4cb3-9aeb-d461f4180c50
Sep 14 02:26:12 minikube kubelet[2297]: E0914 02:26:12.126781    2297 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:26:12 minikube kubelet[2297]: E0914 02:26:12.126847    2297 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:26:12 minikube kubelet[2297]: E0914 02:26:12.126935    2297 kuberuntime_manager.go:1212] container &Container{Name:my-web-app-container,Image:my-web-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8080,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8bgxq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod my-web-app-deployment-77b46d9c46-jvvgp_default(e3d1d1a8-0ebb-483a-8ff0-1bc63331254e): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Sep 14 02:26:12 minikube kubelet[2297]: E0914 02:26:12.126982    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/my-web-app-deployment-77b46d9c46-jvvgp" podUID=e3d1d1a8-0ebb-483a-8ff0-1bc63331254e
Sep 14 02:26:22 minikube kubelet[2297]: E0914 02:26:22.340384    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ImagePullBackOff: \"Back-off pulling image \\\"my-web-app:latest\\\"\"" pod="default/my-web-app-deployment-77b46d9c46-jvvgp" podUID=e3d1d1a8-0ebb-483a-8ff0-1bc63331254e
Sep 14 02:26:23 minikube kubelet[2297]: E0914 02:26:23.340284    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ImagePullBackOff: \"Back-off pulling image \\\"my-web-app:latest\\\"\"" pod="default/my-web-app-deployment-77b46d9c46-5bvhq" podUID=44b15010-38a1-4cb3-9aeb-d461f4180c50
Sep 14 02:26:34 minikube kubelet[2297]: E0914 02:26:34.339137    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ImagePullBackOff: \"Back-off pulling image \\\"my-web-app:latest\\\"\"" pod="default/my-web-app-deployment-77b46d9c46-5bvhq" podUID=44b15010-38a1-4cb3-9aeb-d461f4180c50
Sep 14 02:26:35 minikube kubelet[2297]: E0914 02:26:35.339462    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ImagePullBackOff: \"Back-off pulling image \\\"my-web-app:latest\\\"\"" pod="default/my-web-app-deployment-77b46d9c46-jvvgp" podUID=e3d1d1a8-0ebb-483a-8ff0-1bc63331254e
Sep 14 02:26:49 minikube kubelet[2297]: E0914 02:26:49.338807    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ImagePullBackOff: \"Back-off pulling image \\\"my-web-app:latest\\\"\"" pod="default/my-web-app-deployment-77b46d9c46-jvvgp" podUID=e3d1d1a8-0ebb-483a-8ff0-1bc63331254e
Sep 14 02:26:53 minikube kubelet[2297]: E0914 02:26:53.196165    2297 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:26:53 minikube kubelet[2297]: E0914 02:26:53.196239    2297 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:26:53 minikube kubelet[2297]: E0914 02:26:53.196366    2297 kuberuntime_manager.go:1212] container &Container{Name:my-web-app-container,Image:my-web-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8080,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9vj4m,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod my-web-app-deployment-77b46d9c46-5bvhq_default(44b15010-38a1-4cb3-9aeb-d461f4180c50): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Sep 14 02:26:53 minikube kubelet[2297]: E0914 02:26:53.196401    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/my-web-app-deployment-77b46d9c46-5bvhq" podUID=44b15010-38a1-4cb3-9aeb-d461f4180c50
Sep 14 02:27:04 minikube kubelet[2297]: E0914 02:27:04.336457    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ImagePullBackOff: \"Back-off pulling image \\\"my-web-app:latest\\\"\"" pod="default/my-web-app-deployment-77b46d9c46-5bvhq" podUID=44b15010-38a1-4cb3-9aeb-d461f4180c50
Sep 14 02:27:08 minikube kubelet[2297]: E0914 02:27:08.338357    2297 remote_image.go:167] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:27:08 minikube kubelet[2297]: E0914 02:27:08.338507    2297 kuberuntime_image.go:53] "Failed to pull image" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="my-web-app:latest"
Sep 14 02:27:08 minikube kubelet[2297]: E0914 02:27:08.338596    2297 kuberuntime_manager.go:1212] container &Container{Name:my-web-app-container,Image:my-web-app:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8080,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8bgxq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},} start failed in pod my-web-app-deployment-77b46d9c46-jvvgp_default(e3d1d1a8-0ebb-483a-8ff0-1bc63331254e): ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Sep 14 02:27:08 minikube kubelet[2297]: E0914 02:27:08.338629    2297 pod_workers.go:1294] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"my-web-app-container\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: pull access denied for my-web-app, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/my-web-app-deployment-77b46d9c46-jvvgp" podUID=e3d1d1a8-0ebb-483a-8ff0-1bc63331254e

* 
* ==> storage-provisioner [7b7fc8431a5b] <==
* I0914 02:24:12.991683       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
F0914 02:24:43.001452       1 main.go:39] error getting server version: Get "https://10.96.0.1:443/version?timeout=32s": dial tcp 10.96.0.1:443: i/o timeout

* 
* ==> storage-provisioner [f5a854a7129a] <==
* I0914 02:24:44.033827       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0914 02:24:44.045505       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0914 02:24:44.045676       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0914 02:24:44.056504       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0914 02:24:44.056687       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_fc12a7f5-876a-4e9c-a5ff-15320950fc50!
I0914 02:24:44.057810       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"71441247-f806-4d61-a4b0-a0dc025674ed", APIVersion:"v1", ResourceVersion:"389", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_fc12a7f5-876a-4e9c-a5ff-15320950fc50 became leader
I0914 02:24:44.157435       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_fc12a7f5-876a-4e9c-a5ff-15320950fc50!

